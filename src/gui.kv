#:import CoreImage kivy.core.image.Image
#:import FadeTransition kivy.uix.screenmanager.FadeTransition
#:import F kivy.factory.Factory

<AppManager>:
	orientation: "vertical"
	
	tool_buttons: [tag_button, create_button, encapse_button, merge_button, remove_button, modify_button]
	object_list: [add_select_label, labelling_box, focus_box, classification_box, approval_box, document_name_box, save_box, switch_doc_box, metric_box, metadata_box, switch_frame_box, help_box, options_box]
	
	save_icone: save_icone
	class_box: class_box
	page_num: page_num
	
	
	main_box: main_box
	my_box: my_box
	my_zoom: my_zoom
	my_image: my_image
	resizer: resizer	
	box_beginning: box_beginning
	
	label_box: label_box
	accordion_BIO: accordion_BIO
	accordion_tool: accordion_tool
	checkbox_showboxes: checkbox_showboxes
	checkbox_showbackground: checkbox_showbackground
	checkbox_showtokens: checkbox_showtokens
	checkbox_refocus: checkbox_refocus
	checkbox_switch: checkbox_switch
	checkbox_boxinside: checkbox_boxinside


	Screen:
		name: 'screen1'
		
		FloatLayout:
			
			BoxLayout:
				orientation: 'vertical'
				pos: self.parent.width/3-self.width/2, 2*self.parent.height/3-self.height/2
				size_hint: 0.15, 0.35
				
				Image:
					pos: self.pos
					size_hint_y: 0.85
					size: self.size
					source: "keyboard_icones\classify.png"
					
				Button:
					size_hint_y: 0.15
					text: 'Classify'
					on_release:
						root.labelling = False
						root.classification = True
						root.doc_starter(".\\keyboard_icones\\doc_starter_classification.png")
						root.transition.direction = 'right'
						root.current = 'screen2'
				
			BoxLayout:
				orientation: 'vertical'
				pos: 2*self.parent.width/3-self.width/2, 2*self.parent.height/3-self.height/2
				size_hint: 0.15, 0.35
				
				Image:
					pos: self.pos
					size_hint_y: 0.85
					size: self.size
					source: "keyboard_icones\label.png"
					
				Button:
					size_hint_y: 0.15
					text: 'Label'
					on_release:
						root.labelling = True
						root.classification = False
						root.doc_starter(".\\keyboard_icones\\doc_starter_labelling.png")
						root.transition.direction = 'left'
						root.current = 'screen2'
						
			BoxLayout:
				orientation: 'vertical'
				pos: self.parent.width/2-self.width/2, self.parent.height/3-self.height/2
				size_hint: 0.15, 0.35
				
				Image:
					
					pos: self.pos
					size_hint_y: 0.85
					size: self.size
					source: "keyboard_icones\do_both.png"
					
				Button:
					size_hint_y: 0.15
					text: 'Do both'
					on_release: 
						root.labelling = True
						root.classification = True
						root.doc_starter(".\\keyboard_icones\\doc_starter_both.png")
						root.transition.direction = 'up'
						root.current = 'screen2'
	
	Screen:
		name: 'screen2'
		orientation: "horizontal"
		


		BoxLayout:
			id: main_box
			spacing: 10
			padding: 10
			
			
			BoxLayout:
			
				orientation: "vertical"
				size_hint_x: 0.2				
				spacing: 30
				
				TextInput:
					id: document_name_box
					size_hint: None, None
					height: self.minimum_height
					multiline: False
					halign: 'center'
					valign: 'middle'
					padding: 0
					background_color: 0,0,0,1
					foreground_color: 1, 1, 1, 1
					text: root.current_filename
					width: self._lines_labels[0].width + self.font_size
					readonly: True
					on_text:
						self.width = self._lines_labels[0].width + self.font_size
				
				AnchorLayout:
					id: save_box
					size_hint_y: 0.05
					anchor_x: 'center'
					anchor_y: 'center'
					
					Image:
						id: save_icone
						opacity: 0
						source: "keyboard_icones\\save.png"
				
				
				
				BoxLayout:
					id: approval_box
					size_hint_y: 0.02
					opacity: 1 if root.dataset and root.labelling else 0.5 if root.labelling else 0
					padding: 10
					spacing: 10
					
					
					Label:
						size_hint_x: 0.5
						text: "Approved: " if root.is_approved else "Not approved: "
						
					ImageButton:
						size_hint_x: 0.25
						disabled: not root.dataset
						source: "keyboard_icones\\approved.png" if root.is_approved else "keyboard_icones\\not_approved.png"
						on_release:
							root.nb_approved -= root.is_approved		## Update number of approved documents using a boolean (1)
							root.is_approved = 1 - root.is_approved
							root.nb_approved += root.is_approved		## Update number of approved documents using a boolean (2)
							root.write_json_labelling()
							
					ImageButton:
						size_hint_x: 0.25
						source: "keyboard_icones\\{}.png".format(root.used_keys["approval"])
						on_release:
							root.popKey.open(self)
							root.in_DefineKeyPopup = True	
							
							
				
				BoxLayout:
					id: classification_box
					orientation: "vertical"
					size_hint_y: 0.63
					spacing: 10
					padding: 10
					disabled: not root.dataset and root.classification
					opacity: 1 if root.dataset and root.classification else 0.5 if root.classification else 0
					
					canvas:
						Color:
							rgba: 1, 1, 1, 2
						Line:
							points: [(self.pos), (self.pos[0]+self.size[0], self.pos[1]), (self.pos[0]+self.size[0], self.pos[1]+self.size[1]), (self.pos[0], self.pos[1]+self.size[1]), (self.pos)]
						Color:
							rgba: 1, 1, 1, 0.15
						Rectangle:
							pos: self.pos
							size: self.size
				
					BoxLayout:
						id: class_box
						orientation: "vertical"
						size_hint_y: 0.70
						spacing: 10
						padding: 10
						
					
					BoxLayout:
						size_hint_y: 0.05
						
						Label:
							size_hint_x: 0.9
							text: "Switch document once classified"
							
						CheckBox:
							id: checkbox_switch
							size_hint_x: 0.1
					
					Button:
						size_hint_y: 0.1
						text: "Add Class"
						on_release: 
							root.popAdd.open()
							
					Button:
						size_hint_y: 0.05
						text: "Archive documents"
						on_release:
							root.popArchive.open(root.check_deletion_rights())
						
				

				
				BoxLayout:
					id: metric_box
					size_hint_y: 0.02
					disabled: not root.dataset
					opacity: 0.5 if self.disabled else 1
					
					Label:
						size_hint_x: 0.8
						text: "Project metrics: "
						
					ImageButton:
						size_hint_x: 0.2
						source: "keyboard_icones\\{}.png".format(root.used_keys["project-metrics"])
						on_press:
							root.popKey.open(self)
							root.in_DefineKeyPopup = True
							
				BoxLayout:
					id: help_box
					size_hint_y: 0.02
					disabled: not root.dataset
					opacity: 0.5 if self.disabled else 1
					
					Label:
						size_hint_x: 0.8
						text: "Help: "
						
					ImageButton:
						size_hint_x: 0.2
						source: "keyboard_icones\\{}.png".format(root.used_keys["help"])
						on_press:
							root.popKey.open(self)
							root.in_DefineKeyPopup = True
				
				BoxLayout:
					id: metadata_box
					size_hint_y: 0.02
					disabled: not (root.dataset and root.labelling)
					opacity: 1 if root.dataset and root.labelling else 0.5 if root.labelling else 0
					
					Label:
						size_hint_x: 0.8
						text: "Metadata: "
						
					ImageButton:
						size_hint_x: 0.2
						source: "keyboard_icones\\{}.png".format(root.used_keys["metadata"])
						on_press:
							root.popKey.open(self)
							root.in_DefineKeyPopup = True
				
				BoxLayout:
					id: switch_doc_box
					size_hint_y: 0.09
					disabled: not root.dataset
					opacity: 0.5 if self.disabled else 1
				
					AnchorLayout:
						size_hint_x: 0.3
						anchor_x: 'center'
						anchor_y: 'center'
						
						Button:
							size_hint_y: 0.5
							text: "Go to..."
							on_release:
								root.popGoTo.open()
				
					BoxLayout:
						orientation: 'vertical'
						size_hint_x: 0.7
						spacing: 30
				
						BoxLayout:
							
							Label:
								size_hint_x: 0.7
								text: "Previous"
								
							ImageButton:
								size_hint_x: 0.3
								source: "keyboard_icones\\{}.png".format(root.used_keys["prev"])
								on_press:
									root.popKey.open(self)
									root.in_DefineKeyPopup = True
									
						BoxLayout:
							
							Label:
								size_hint_x: 0.7
								text: "Next"
								
							ImageButton:
								size_hint_x: 0.3
								source: "keyboard_icones\\{}.png".format(root.used_keys["next"])
								on_press:
									root.popKey.open(self)
									root.in_DefineKeyPopup = True				
						
				BoxLayout:
					id: switch_frame_box
					orientation: "horizontal"
					size_hint_y: 0.03
					spacing: 30
					opacity: 1 if root.dataset else 0.5
					
					ImageButton:
						source: "keyboard_icones\\{}.png".format(root.used_keys["prev_frame"])
						on_press:
							root.popKey.open(self)
							root.in_DefineKeyPopup = True
					Label:
						id: page_num
						text: "page 1/1"
						
					ImageButton:
						source: "keyboard_icones\\{}.png".format(root.used_keys["next_frame"])
						on_press:
							root.popKey.open(self)
							root.in_DefineKeyPopup = True
						
			BoxStencil:
				orientation: 'vertical'

				FloatLayout:
				
					id: my_box

					Zoom:
						id: my_zoom
						obj: app
						pos: self.parent.parent.pos
						
						Image:
							id: my_image
							source: root.current_filepath
							allow_stretch: True
							keep_ratio: True
							
					Cursor:
						opacity: 1 if checkbox_cursor.active and root.dataset and root.labelling else 0
						
					BoxLayout
						id: box_beginning
						orientation: "vertical"
						size_hint: 0.3, 0.2
						pos_hint: {'center_x': 0.5}
						spacing: 15
						padding: 15
						
						canvas:
						
							Color:
								rgba: 0.3, 0.3, 0.3, 1
								
							Rectangle:
								pos: self.pos
								size: self.size
					
						Button:
							text: "Load Dataset"
							on_release: root.show_load()
						
						Button:
							text: "Cancel"
							on_release:
								root.transition.direction = 'down' if root.classification and root.labelling else 'left' if root.classification else 'right'
								root.current = 'screen1'
								class_box.clear_widgets()
								root.class_directory = {}
						
			BoxLayout:
				orientation: "vertical"
				size_hint_x: 0.2
				spacing: 5
				padding: 5
				
				
				BoxLayout:
					id: add_select_label
					orientation: 'vertical'
					size_hint_y: 0.45
					disabled: not (root.dataset and root.labelling)
					opacity: 1 if root.dataset and root.labelling else 0.5 if root.labelling else 0
				
					canvas:
						Color:
							rgba: 1, 1, 1, 2
							## rgba: 1.95, 1.68, 0, 2
						Line:
							points: [(self.pos), (self.pos[0]+self.size[0], self.pos[1]), (self.pos[0]+self.size[0], self.pos[1]+self.size[1]), (self.pos[0], self.pos[1]+self.size[1]), (self.pos)]
						Color:
							rgba: 1, 1, 1, 0.15
							## rgba: 1.95, 1.68, 0, 0.15
						Rectangle:
							pos: self.pos
							size: self.size
						
					BoxLayout
						size_hint_y: 0.1
						
						Button:
							text: "Add local label"
							## background_color: 1.95, 1.68, 0, 2
							on_release:
								root.popCol.mode = "local"
								root.popCol.open()
								
						Button:
							text: "Add general label"
							## background_color: 1.95, 1.68, 0, 2
							on_release: 
								root.popCol.mode = "general"
								root.popCol.open()
					
					BoxLayout:
						size_hint_y: 0.9
						spacing: 10
						padding: 10
						
						BoxLayout:
							orientation: 'vertical'
							size_hint_x: 0.4
							
							BoxLayout:
									
								ImageButton:
									size_hint_x: 0.6
									source: "keyboard_icones\\{}.png".format(root.used_keys["next_label"])
									on_press:
										root.popKey.open(self)
										root.in_DefineKeyPopup = True
								
								Image:
									size_hint_x: 0.4
									source: 'keyboard_icones\\labels_up.png'
									
								
							BoxLayout:
									
								ImageButton:
									size_hint_x: 0.6
									source: "keyboard_icones\\{}.png".format(root.used_keys["prev_label"])
									on_press:
										root.popKey.open(self)
										root.in_DefineKeyPopup = True
										
								Image:
									size_hint_x: 0.4
									source: 'keyboard_icones\\labels_down.png'
						
						
						
						BoxLayout:
							id: label_box
							orientation: "vertical"
							size_hint_x: 0.6
				
				
				BoxLayout:
					id: labelling_box
					size_hint_y: 0.35
					orientation: "vertical"
					disabled: not (root.dataset and root.labelling)
					opacity: 1 if root.dataset and root.labelling else 0.5 if root.labelling else 0
					
					canvas:
						Color:
							rgba: 0.75, 1.5, 1.5, 1.5
						Line:
							points: [(self.pos), (self.pos[0]+self.size[0], self.pos[1]), (self.pos[0]+self.size[0], self.pos[1]+self.size[1]), (self.pos[0], self.pos[1]+self.size[1]), (self.pos)]
						Color:
							rgba: 0.75, 1.5, 1.5, 0.2
						Rectangle:
							pos: self.pos
							size: self.size
					
					BoxLayout:
						size_hint_y: 0.1
						
						Label:
							text: "Show boxes"
							
						CheckBox:
							id: checkbox_showboxes
							text: "Show boxes"
					
					Accordion:
						id: accordion_tool
						orientation: "vertical"
						size_hint_y: 0.9
						disabled: not checkbox_showboxes.active
						opacity: 0.4 if self.disabled else 1
						
						AccordionItem:
							title: 'Tool'
							id: accordion_tool
							collapse: False
							
							BoxLayout:
								orientation: "vertical"
								padding: 2
								spacing: 2								
								
								BoxLayout:
									
									ImageButton:
										size_hint_x: 0.22
										source: "keyboard_icones\\{}.png".format(root.used_keys["tag"])
										on_press:
											root.popKey.open(self)
											root.in_DefineKeyPopup = True
											
									ToggleButton:
										id: tag_button
										text: "Tag"
										group: 'cursor_tool'
										state: 'down'
										border: 0, 16, 0, 16
										allow_no_selection: False
										background_color: 0.75, 1.5, 1.5, 1.5
										on_press:
											root.cursor_tool = self.text
											root.update_resizer()
										
								BoxLayout:
									
									ImageButton:
										size_hint_x: 0.22
										source: "keyboard_icones\\{}.png".format(root.used_keys["create"])
										on_press:
											root.popKey.open(self)
											root.in_DefineKeyPopup = True	
											
									ToggleButton:
										id: create_button
										text: "Create"
										group: 'cursor_tool'
										border: 0, 16, 0, 16
										allow_no_selection: False
										background_color: 0.75, 1.5, 1.5, 1.5
										on_press:
											root.cursor_tool = self.text
											root.update_resizer()
											
								BoxLayout:
									
									ImageButton:
										size_hint_x: 0.22
										source: "keyboard_icones\\{}.png".format(root.used_keys["modify"])
										on_press:
											root.popKey.open(self)
											root.in_DefineKeyPopup = True
											
									ToggleButton:
										id: modify_button
										text: "Move/Resize"
										group: 'cursor_tool'
										border: 0, 16, 0, 16
										allow_no_selection: False
										background_color: 0.75, 1.5, 1.5, 1.5
										on_press:
											root.cursor_tool = self.text
											root.update_resizer()

								BoxLayout:
									
									ImageButton:
										size_hint_x: 0.22
										source: "keyboard_icones\\{}.png".format(root.used_keys["encapsulate"])
										on_press:
											root.popKey.open(self)
											root.in_DefineKeyPopup = True
									
									ToggleButton:
										id: encapse_button
										text: "Encapsulate"
										group: 'cursor_tool'
										border: 0, 16, 0, 16
										allow_no_selection: False
										background_color: 0.75, 1.5, 1.5, 1.5
										on_press:
											root.cursor_tool = self.text
											root.update_resizer()
								
								BoxLayout:
									
									ImageButton:
										size_hint_x: 0.22
										source: "keyboard_icones\\{}.png".format(root.used_keys["merge"])
										on_press:
											root.popKey.open(self)
											root.in_DefineKeyPopup = True
											
									ToggleButton:
										id: merge_button
										text: "Merge"
										group: 'cursor_tool'
										border: 0, 16, 0, 16
										allow_no_selection: False
										background_color: 0.75, 1.5, 1.5, 1.5
										on_press:
											root.cursor_tool = self.text
											root.update_resizer()
								
								BoxLayout:
									
									ImageButton:
										size_hint_x: 0.22
										source: "keyboard_icones\\{}.png".format(root.used_keys["remove"])
										on_press:
											root.popKey.open(self)
											root.in_DefineKeyPopup = True
											
									ToggleButton:
										id: remove_button
										text: "Remove"
										group: 'cursor_tool'
										border: 0, 16, 0, 16
										allow_no_selection: False
										background_color: 0.75, 1.5, 1.5, 1.5
										on_press:
											root.cursor_tool = self.text
											root.update_resizer()
								
						
						AccordionItem:
							id:  accordion_BIO
							title: 'BIO labelling'
							collapse: True
							text: "Show BIO"								

							BoxLayout:
								orientation: 'vertical'
								padding: 5
								spacing: 5
						
								BoxLayout:
									size_hint_y: 0.425
								
									ToggleButton:
										text: "B"
										group: 'bio_tool'
										border: 0, 16, 0, 16
										background_color: 0.75, 1.5, 1.5, 1.5
										on_press: root.bio_tool = self.text
									
									ToggleButton:
										text: "I"
										group: 'bio_tool'
										border: 0, 16, 0, 16
										background_color: 0.75, 1.5, 1.5, 1.5
										on_press: root.bio_tool = self.text
									
									ToggleButton:
										text: "O"
										group: 'bio_tool'
										state: 'down'
										border: 0, 16, 0, 16
										background_color: 0.75, 1.5, 1.5, 1.5
										on_press: root.bio_tool = self.text
									
								ToggleButton:
									size_hint_y: 0.425
									text: "Select chunk"
									group: 'bio_tool'
									border: 0, 16, 0, 16
									background_color: 0.75, 1.5, 1.5, 1.5
									on_press: root.bio_tool = self.text
								
								BoxLayout:
									size_hint_y: 0.15
									
									Label:
										text: "id: "
									
									TextInput:
										text: ""
										multiline: False
										on_text: root.BIO_ID = "-" + self.text if self.text else ""
										
				
				BoxLayout:
					id: options_box
					disabled: not (root.dataset and root.labelling)
					opacity: 1 if root.dataset and root.labelling else 0.5 if root.labelling else 0
					orientation: 'vertical'
					size_hint_y: 0.1
					

					BoxLayout:
					
						Label:
							size_hint_x: 0.7
							text: "Show tokens"
							
						CheckBox:
							id: checkbox_showtokens
							size_hint_x: 0.3
							text: "Show tokens"
					
					BoxLayout:
					
						Label:
							size_hint_x: 0.7
							text: "Show cursor"
							
						CheckBox:
							id: checkbox_cursor
							size_hint_x: 0.3
							active: True
							
						
					BoxLayout:
					
						Label:
							size_hint_x: 0.7
							text: "Show background"
							
						CheckBox:
							id: checkbox_showbackground
							size_hint_x: 0.3
							text: "Show background"
							active: True
					
					BoxLayout:
					
						Label:
							size_hint_x: 0.7
							text: "Box creation inside only"
							
						CheckBox:
							id: checkbox_boxinside
							size_hint_x: 0.3
							text: "Box creation inside only"
							active: True
							
				BoxLayout:
					id: focus_box
					size_hint_y: 0.05
					orientation: "vertical"
					disabled: not root.dataset
					opacity: 0.5 if self.disabled else 1
					
					canvas:
						Color:
							rgba: 1, 1, 1, 1
						Line:
							points: [(self.pos), (self.pos[0]+self.size[0], self.pos[1]), (self.pos[0]+self.size[0], self.pos[1]+self.size[1]), (self.pos[0], self.pos[1]+self.size[1]), (self.pos)]
							
					AnchorLayout:
						size_hint_y: 0.6
						anchor_x: 'center'
						anchor_y: 'center'
						Button:
							size_hint: 0.7, 0.7
							text: "Focus"
							on_release: 
								root.my_zoom.focus()
					
					BoxLayout:
						size_hint_y: 0.4
					
						Label:
							size_hint_x: 0.7
							text: "Auto refocus"
							
						CheckBox:
							id: checkbox_refocus
							size_hint_x: 0.3
							text: "Auto refocus"
							active: True

						
		LinePlayground:	
			obj: app
		
		Resizer:
			id : resizer
			obj: app